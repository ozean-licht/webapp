{
  "name": "Airtable Courses to Supabase Sync",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hours": 1
            }
          ]
        }
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "application": "airtable",
        "operation": "getAll",
        "baseId": "app5e7mJQhxDYD5Zy",
        "table": "courses",
        "returnAll": true,
        "options": {
          "fields": [
            "title",
            "slug",
            "description",
            "price",
            "is_public",
            "thumbnail",
            "created_at",
            "updated_at"
          ],
          "filterByFormula": "AND(IS_AFTER({updated_at}, DATEADD(NOW(), -1, 'hours')))"
        }
      },
      "name": "Get Airtable Records",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 1,
      "position": [
        460,
        300
      ],
      "credentials": {
        "airtableApi": {
          "id": "airtable-api-key",
          "name": "Airtable API"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {
          "reset": false
        }
      },
      "name": "Split In Batches",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "seconds"
      },
      "name": "Delay",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        900,
        500
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForAllItems",
        "language": "javaScript",
        "code": "// Map Airtable fields to Supabase format\n\nconst course = $input.item.json;\n\nreturn {\n  json: {\n    title: course.fields.title || '',\n    slug: course.fields.slug || '',\n    description: course.fields.description || '',\n    price: course.fields.price || 0,\n    is_published: course.fields.is_public || false,\n    png_url: course.fields.thumbnail && course.fields.thumbnail[0] ? course.fields.thumbnail[0].url : null,\n    airtable_id: course.id,\n    airtable_created_at: course.fields.created_at || null,\n    airtable_updated_at: course.fields.updated_at || null,\n    updated_at: new Date().toISOString()\n  }\n};"
      },
      "name": "Map Course Fields",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.png_url }}",
              "operation": "isEmpty"
            }
          ]
        },
        "combineOperation": "any",
        "options": {}
      },
      "name": "Check Thumbnail Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "={{ $env.SUPABASE_URL }}/rest/v1/courses?slug=eq.{{ $json.slug }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Check Course Exists",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1340,
        160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $response.statusCode }}",
              "value2": 200,
              "operation": "equal"
            },
            {
              "value1": "={{ $response.body.length }}",
              "value2": 0,
              "operation": "greaterThan"
            }
          ]
        },
        "combineOperation": "all",
        "options": {}
      },
      "name": "Course Exists Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1560,
        160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.SUPABASE_URL }}/rest/v1/courses",
        "sendBody": true,
        "bodyContentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $json.title }}"
            },
            {
              "name": "slug",
              "value": "={{ $json.slug }}"
            },
            {
              "name": "description",
              "value": "={{ $json.description }}"
            },
            {
              "name": "price",
              "value": "={{ $json.price }}"
            },
            {
              "name": "is_published",
              "value": "={{ $json.is_published }}"
            },
            {
              "name": "airtable_id",
              "value": "={{ $json.airtable_id }}"
            },
            {
              "name": "airtable_created_at",
              "value": "={{ $json.airtable_created_at }}"
            },
            {
              "name": "airtable_updated_at",
              "value": "={{ $json.airtable_updated_at }}"
            },
            {
              "name": "updated_at",
              "value": "={{ $json.updated_at }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_SERVICE_ROLE_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "options": {}
      },
      "name": "Insert Course",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1780,
        40
      ]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "={{ $env.SUPABASE_URL }}/rest/v1/courses?slug=eq.{{ $json.slug }}",
        "sendBody": true,
        "bodyContentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $json.title }}"
            },
            {
              "name": "slug",
              "value": "={{ $json.slug }}"
            },
            {
              "name": "description",
              "value": "={{ $json.description }}"
            },
            {
              "name": "price",
              "value": "={{ $json.price }}"
            },
            {
              "name": "is_published",
              "value": "={{ $json.is_published }}"
            },
            {
              "name": "airtable_id",
              "value": "={{ $json.airtable_id }}"
            },
            {
              "name": "airtable_updated_at",
              "value": "={{ $json.airtable_updated_at }}"
            },
            {
              "name": "updated_at",
              "value": "={{ $json.updated_at }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_SERVICE_ROLE_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Course",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1780,
        280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.SUPABASE_URL }}/functions/v1/process-course-thumbnail",
        "sendBody": true,
        "bodyContentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "course_slug",
              "value": "={{ $json.slug }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.png_url }}"
            },
            {
              "name": "action",
              "value": "process_4_variants"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "name": "Process Thumbnails",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2000,
        160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.SUPABASE_URL }}/functions/v1/process-course-thumbnail",
        "sendBody": true,
        "bodyContentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "course_slug",
              "value": "={{ $json.slug }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.png_url }}"
            },
            {
              "name": "action",
              "value": "process_4_variants"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "name": "Process Thumbnails Update",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2000,
        400
      ]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Airtable Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Airtable Records": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches": {
      "main": [
        [
          {
            "node": "Delay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delay": {
      "main": [
        [
          {
            "node": "Map Course Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map Course Fields": {
      "main": [
        [
          {
            "node": "Check Thumbnail Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Thumbnail Exists": {
      "main": [
        [
          {
            "node": "Check Course Exists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Course Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Course Exists": {
      "main": [
        [
          {
            "node": "Course Exists Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Course Exists Check": {
      "main": [
        [
          {
            "node": "Update Course",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Insert Course",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Course": {
      "main": [
        [
          {
            "node": "Process Thumbnails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Course": {
      "main": [
        [
          {
            "node": "Process Thumbnails Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "timezone": "Europe/Berlin",
    "executionOrder": "v1"
  },
  "staticData": null
}
